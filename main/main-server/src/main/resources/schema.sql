CREATE TABLE IF NOT EXISTS users (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  name VARCHAR(255) NOT NULL,
  email VARCHAR(255) NOT NULL UNIQUE,
  CONSTRAINT pk_user PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS category (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  name VARCHAR(50) NOT NULL UNIQUE,
  CONSTRAINT pk_category PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS location (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  latitude FLOAT NOT NULL UNIQUE,
  longitude FLOAT NOT NULL UNIQUE,
  CONSTRAINT pk_location PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS state_action (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  name VARCHAR(255) NOT NULL,
  CONSTRAINT pk_state_action PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS event (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  user_id BIGINT NOT NULL,
  category_id BIGINT,
  location_id BIGINT,
  state_action_id BIGINT NOT NULL,
  annotation VARCHAR(2000) NOT NULL,
  description VARCHAR(7000) NOT NULL,
  title VARCHAR(255) NOT NULL,
  event_date TIMESTAMP NOT NULL,
  paid BOOLEAN,
  participant_limit BIGINT,
  request_moderation BOOLEAN,
  created_on TIMESTAMP NOT NULL,
  published_on TIMESTAMP,
  CONSTRAINT pk_event PRIMARY KEY (id),
  CONSTRAINT fk_event_users FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
  CONSTRAINT fk_event_category FOREIGN KEY (category_id) REFERENCES category(id) ON DELETE RESTRICT,
  CONSTRAINT fk_event_location FOREIGN KEY (location_id) REFERENCES location(id) ON DELETE SET NULL,
  CONSTRAINT fk_event_state_action FOREIGN KEY (state_action_id) REFERENCES state_action(id) ON DELETE SET NULL
);

CREATE TABLE IF NOT EXISTS request_status (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  name VARCHAR(255) NOT NULL,
  CONSTRAINT pk_request_status PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS request (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  user_id BIGINT NOT NULL,
  event_id BIGINT NOT NULL,
  request_status_id BIGINT NOT NULL,
  created TIMESTAMP NOT NULL,
  CONSTRAINT pk_request PRIMARY KEY (id),
  CONSTRAINT fk_request_users FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
  CONSTRAINT fk_request_event FOREIGN KEY (event_id) REFERENCES event(id) ON DELETE CASCADE,
  CONSTRAINT fk_request_request_status FOREIGN KEY (request_status_id) REFERENCES request_status(id) ON DELETE SET NULL
);

CREATE TABLE IF NOT EXISTS compilation (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  pinned BOOLEAN NOT NULL,
  title VARCHAR(255) NOT NULL,
  CONSTRAINT pk_compilation PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS event_compilation (
  event_id BIGINT NOT NULL,
  compilation_id BIGINT NOT NULL,
  CONSTRAINT pk_event_compilation PRIMARY KEY (event_id, compilation_id),
  CONSTRAINT fk_compilation_event FOREIGN KEY (event_id) REFERENCES event(id) ON DELETE CASCADE,
  CONSTRAINT fk_event_compilation FOREIGN KEY (compilation_id) REFERENCES compilation(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS admin_comment (
  event_id BIGINT NOT NULL,
  comment VARCHAR(7000) NOT NULL,
  CONSTRAINT pk_admin_comment PRIMARY KEY (event_id),
  CONSTRAINT fk_admin_comment_event FOREIGN KEY (event_id) REFERENCES event(id) ON DELETE CASCADE
);